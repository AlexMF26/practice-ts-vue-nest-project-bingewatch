// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

enum EntryType {
  MOVIE
  SERIES
}

model User {
  watchlist    WatchlistItem[]
  id           String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  role         Role            @default(USER)
  email        String          @unique
  passwordHash String
  name         String
  replies      Opinion[]
}

model Entry {
  watchlistItem WatchlistItem[]
  imdbId        String          @id
  title         String
  posterUrl     String
  plot          String          @db.Text
  rating        Float?
  seasonsData   Int[] // will be empty for movies
}

model WatchlistItem {
  user     User     @relation(fields: [userId], references: [id])
  entry    Entry    @relation(fields: [entryId], references: [imdbId])
  review   Opinion? @relation(fields: [reviewId], references: [id])
  id       String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId   String   @db.Uuid
  entryId  String
  reviewId String?  @unique @db.Uuid
  progress Int      @default(0)
  rating   Int?
}

model Opinion {
  author        User           @relation(fields: [authorId], references: [id])
  watchlistItem WatchlistItem?
  replyTo       Opinion?       @relation("replies", fields: [replyToId], references: [id])
  replies       Opinion[]      @relation("replies")
  id            String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  authorId      String         @db.Uuid
  replyToId     String?        @db.Uuid
  text          String         @db.Text
}
